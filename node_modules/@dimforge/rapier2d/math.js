import { RawVector, RawRotation } from "./raw";
/**
 * A 2D vector.
 */
var Vector2 = /** @class */ (function () {
    function Vector2(x, y) {
        this.x = x;
        this.y = y;
    }
    return Vector2;
}());
export { Vector2 };
var VectorOps = /** @class */ (function () {
    function VectorOps() {
    }
    VectorOps.new = function (x, y) {
        return new Vector2(x, y);
    };
    VectorOps.zeros = function () {
        return VectorOps.new(0.0, 0.0);
    };
    // FIXME: type ram: RawVector?
    VectorOps.fromRaw = function (raw) {
        if (!raw)
            return null;
        var res = VectorOps.new(raw.x, raw.y);
        raw.free();
        return res;
    };
    VectorOps.intoRaw = function (v) {
        return new RawVector(v.x, v.y);
    };
    return VectorOps;
}());
export { VectorOps };
var RotationOps = /** @class */ (function () {
    function RotationOps() {
    }
    RotationOps.identity = function () {
        return 0.0;
    };
    RotationOps.fromRaw = function (raw) {
        if (!raw)
            return null;
        var res = raw.angle;
        raw.free();
        return res;
    };
    RotationOps.intoRaw = function (angle) {
        return RawRotation.fromAngle(angle);
    };
    return RotationOps;
}());
export { RotationOps };
// #endif
//# sourceMappingURL=math.js.map